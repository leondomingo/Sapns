#
# sapns - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory,
# and generally should not be modified by end users.

[DEFAULT]
debug            = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server      = localhost
error_email_from = paste@localhost

[server:main]
use  = egg:Paste#http
# use  = egg:gunicorn#main
host = 0.0.0.0
port = 8081

[sa_auth]
cookie_secret         = s4pn5-c00k13-s3cr3t

[app:main]
use                   = egg:sapns
full_stack            = true
cache_dir             = %(here)s/data
beaker.session.key    = sapns
beaker.session.secret = s3ss10n-s3cR3T
beaker.cache.type     = memory

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

#auto_reload_templates = false

# Sapns settings
pg_path             = /opt/PostgreSQL/9.1/bin
views_prefix        = _view_
# formats
formats.date        = %m/%d/%Y
formats.date.xls    = mm/dd/yyyy
formats.time        = %H:%M
formats.time.xls    = hh:mm
formats.datetime    = %m/%d/%Y %H:%M
formats.float       = 9.999,99
formats.float.xls   = #,##0.00
# alignment
alignment.number    = right
alignment.text      = left
alignment.date_time = center

# JavaScript options
js.date_format       = mm/dd/yy
js.date_format2      = mm/dd/yyyy
js.date_format2_long = dddd, mmmm dd yyyy
# 0-sunday, 1-monday, ..., 6-saturday
js.first_day         = 1

# TODO: Application's settings here
app.name            = Sapns
app.subtitle        = Web Information System
app.company_url     = http://www.sapns.org
# app.root_folder =
# app.update_folder =
# app.custom_list = sapns.lib.foo.lists.ListFoo
app.home            = /dashboard
app.repo_base       = %(here)s/sapns/public/repo
app.url             = http://localhost:8081/
app.language_cookie = sp_language
app.languages       = en#English,es#Espa√±ol
# true=active, false (or empty)=not active
app.use_ssl         =

htmltopdf.path      = /path/to/wkhtmltopdf/
htmltopdf.version   = 0.11
# htmltopdf.version   = 0.9

# log_access
# 1=active, (anything else)=not active
app.settings.log_access     = 1
# ttl for "access" collection in seconds (default=86400)
app.settings.log_access.ttl = 10

# scheduler
app.scheduler.limit_task = 10
app.scheduler.lock_path  = /tmp/sapns_scheduler.lock

# mailsender
app.mailsender.mail     = sapns@domain.com
app.mailsender.name     = Sapns
app.mailsender.login    = sapns@domain.com
app.mailsender.password = ****
app.mailsender.smtp     = smtp.domain.com

# sqlalchemy
sqlalchemy.url          = postgresql://postgres:pswd@localhost/sapns
sqlalchemy.echo         = false
sqlalchemy.echo_pool    = false
sqlalchemy.pool_recycle = 900

# MongoDB (***following forms are all equivalent***)
### full URL with user, password, host, port and dbname
# mongodb.url      = mongodb://user:psswd@localhost:27017/thename
### partial URL with host, port and dbname
# mongodb.url      = mongodb://localhost:27017/thename
### simplest way using only host (plus "dbname", below)
mongodb.url      = localhost
mongodb.dbname   = thename

#turn this setting to "min" if you would like tw to produce minified
#javascript files (if your library supports that)
toscawidgets.framework.resource_variant = debug

[loggers]
keys = root, sapns, sqlalchemy, auth

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = WARN
handlers = console

[logger_sapns]
level = WARN
handlers =
qualname = sapns

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# A logger for authentication, identification and authorization -- this is
# repoze.who and repoze.what:
[logger_auth]
level = WARN
handlers =
qualname = auth

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %d/%m/%Y %H:%M:%S
